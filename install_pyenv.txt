###install pyenv in ubuntu

$ curl https://pyenv.run | bash
$ sudo apt install curl -y 
$ sudo apt install git -y
$ export PATH="$HOME/.pyenv/bin:$PATH" && eval "$(pyenv init --path)" && echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n eval "$(pyenv init -)"\nfi' >> ~/.bashrc


###Install pyenv in mac
brew install pyenv
echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile

echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.zprofile
exec "$SHELL"

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

###Ad hoc notes
####Work flow for console-driven network automation
1. Run inventory
2. Run password of last resort compliance
3. Run ACL update with optional rollback for failed device, only run on passed complianced
    Device type
        -IOS
        -IOS-XE
        -NXOS
    - CTC
        AP
        EMEA
        US
4. Run ACL update report

Optional:
-backup config
-run intent
-update SNMP
-update QoS
-update interface
-update routing
-configure telemetry

#####
ACL 20 updates

sh run | sec username|secret|password
service password-encryption
enable secret 9 $9$Tr.fJkiWqTDLNE$uZnlmaQm7TjDezx3X59P.rZBh3diBR6z41Op8/igj5g
username admin secret 9 $9$.E8i4elg0kVv5U$mhwRPfT6.rIGwYtLKaL2PLkajzxH2s7rBcSPDPiureM
 password 7 032E0B12035A31020F0700044932
 password 7 032E0B12035A31020F0700044932
 password 7 032E0B12035A31020F0700044932
 
 sh run | sec access-list standard 20
 ip access-list standard 20
 10 permit 139.65.136.0 0.0.3.255
 20 permit 139.65.140.0 0.0.3.255
 30 deny   any log
